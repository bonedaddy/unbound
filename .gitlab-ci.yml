
before_script:
  - mkdir -p ~/.docker/cli-plugins
  - apk add --no-cache curl git python-dev libffi-dev openssl-dev gcc libc-dev make
  - curl -L "https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64" -o ~/.docker/cli-plugins/docker-buildx
  - chmod +x ~/.docker/cli-plugins/docker-buildx
  - curl -L "https://github.com/docker/compose/releases/download/1.25.1-rc1/docker-compose-Linux-x86_64" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose

.build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - make buildx EXTRA_OPTS="--pull --load --platform=${PLATFORM}"

.test:
  image: docker:latest
  stage: test
  services:
    - docker:dind
  script:
    - make buildx test EXTRA_OPTS="--pull --load --platform=${PLATFORM}"

.deploy:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  script:
    - echo "${REGISTRY_PASSWORD}" | docker login -u "${REGISTRY_USER}" --password-stdin "${REGISTRY_URL}"
    - make buildx REGISTRY="${REGISTRY_URL}" EXTRA_OPTS="--pull --push --platform=linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/arm/v7,linux/arm/v6"
  only:
    - master

linux/amd64:
  extends: .test
  variables:
    PLATFORM: linux/amd64

linux/arm64:
  extends: .test
  variables:
    PLATFORM: linux/arm64

linux/ppc64le:
  extends: .test
  variables:
    PLATFORM: linux/ppc64le

linux/s390x:
  extends: .test
  variables:
    PLATFORM: linux/s390x

linux/arm/v7:
  extends: .test
  variables:
    PLATFORM: linux/arm/v7

linux/arm/v6:
  extends: .test
  variables:
    PLATFORM: linux/arm/v6

deploy:
  extends: .deploy
  variables:
    REGISTRY_URL: ${CI_REGISTRY}
    REGISTRY_USER: ${CI_REGISTRY_USER}
    REGISTRY_PASSWORD: ${CI_REGISTRY_PASSWORD}

external:
  extends: .deploy
  variables:
    REGISTRY_URL: ${EXTERNAL_REGISTRY}
    REGISTRY_USER: ${EXTERNAL_REGISTRY_USER}
    REGISTRY_PASSWORD: ${EXTERNAL_REGISTRY_PASSWORD}
