
buildx:
  image: docker:stable-git
  stage: .pre
  services:
    - name: docker:dind
      command: ["--experimental"]
  variables:
    GIT_STRATEGY: none
    DOCKER_BUILDKIT: 1
  before_script: []
  script:
    - git clone git://github.com/docker/buildx /tmp/buildx
    - docker build --platform=local -o . /tmp/buildx
  artifacts:
    paths:
      - buildx
    expire_in: 1 hour

before_script:
  - mkdir -p ~/.docker/cli-plugins
  - mv buildx ~/.docker/cli-plugins/docker-buildx
  - apk add --no-cache curl git py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
  - pip install docker-compose
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker buildx create --use --driver docker-container

.test:
  image: docker:latest
  stage: test
  services:
    - name: docker:dind
      command: ["--experimental"]
  script:
    - docker buildx build --pull --cache-from ${CI_REGISTRY_IMAGE} --platform ${PLATFORM} --load
    - docker-compose up --abort-on-container-exit
  timeout: 2 hours

gitlab:
  image: docker:latest
  stage: deploy
  services:
    - name: docker:dind
      command: ["--experimental"]
  variables:
    BUILD_DATE: $(date -u +'%Y-%m-%dT%H:%M:%SZ')
    BUILD_VERSION: 1.9.6
    VCS_REF: $(git describe --tags --always --dirty)
  script:
    - echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
    - |
      docker buildx build --pull --cache-from ${CI_REGISTRY_IMAGE} \
      --build-arg BUILD_DATE --build-arg BUILD_VERSION --build-arg VCS_REF \
      --platform linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/arm/v7,linux/arm/v6 \
      --push -t ${CI_REGISTRY_IMAGE}:${BUILD_VERSION} -t ${CI_REGISTRY_IMAGE}:latest
  timeout: 2 hours
  only:
    - master

dockerhub:
  extends: gitlab
  variables:
    CI_REGISTRY: docker.io
    CI_REGISTRY_IMAGE: docker.io/${DOCKERHUB_REPOSITORY}
    CI_REGISTRY_USER: ${DOCKERHUB_USERNAME}
    CI_REGISTRY_PASSWORD: ${DOCKERHUB_PASSWORD}
  after_script:
    - docker run -v ${PWD}:/workspace -e DOCKERHUB_USERNAME -e DOCKERHUB_PASSWORD -e DOCKERHUB_REPOSITORY -e README_FILEPATH=/workspace/README.md peterevans/dockerhub-description

linux/amd64:
  extends: .test
  variables:
    PLATFORM: linux/amd64

linux/arm64:
  extends: .test
  variables:
    PLATFORM: linux/arm64

linux/ppc64le:
  extends: .test
  variables:
    PLATFORM: linux/ppc64le

linux/s390x:
  extends: .test
  variables:
    PLATFORM: linux/s390x

linux/arm/v7:
  extends: .test
  variables:
    PLATFORM: linux/arm/v7

linux/arm/v6:
  extends: .test
  variables:
    PLATFORM: linux/arm/v6
